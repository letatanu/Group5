package project.terminal;

/**
 * DoubleEntryMenu - An abstract class which narrows the scope of the TerminalMenu to just the Integer Type
 *
 * Created by Ashton on 10/16/2016.
 */
public class IntEntryMenu extends SingleLineEntryMenu<Integer> {

    private static final int DEFAULT_MIN = 0;
    private static final int DEFAULT_MAX = Integer.MAX_VALUE;

    private int minValue = DEFAULT_MIN;
    private int maxValue = DEFAULT_MAX;

    //Constructor
    public IntEntryMenu(String name, String title, String body, String entryPrompt, int minValue, int maxValue) {
        super(name, title, body, entryPrompt);

        this.minValue = minValue;
        this.maxValue = maxValue;
    }

    public IntEntryMenu(String name, String title, String body, String entryPrompt) {
        super(name, title, body, entryPrompt);
    }

    /**
     * Parses the input for an Integer
     *
     * @param input - raw input from the user
     *
     * @return entry - Integer parsed from input, or null if a parsable integer does not exist in the input
     */
    @Override
    protected Integer parseInputForEntry(String input) {
        try {
            return Integer.parseInt(input);
        } catch (NumberFormatException e) {
            return null;
        }
    }

    public int getMinValue() {
        return minValue;
    }

    public void setMinValue(int minValue) {
        this.minValue = minValue;
    }

    public int getMaxValue() {
        return maxValue;
    }

    public void setMaxValue(int maxValue) {
        this.maxValue = maxValue;
    }

    /**
     * Generates a responseCode based on the settings
     *      0: Valid entry
     *     -1.xml: Invalid Input
     *     -2: Less than minimum
     *     -3: Greater than max
     *
     * @return responseCode
     */
    @Override
    protected int generateEntryResponseCode() {
        int response_code = 0;
        if (entry != null) {
            if (entry >= minValue) {
                if (!(entry <= maxValue)) {
                    response_code = -3;
                }
            } else
                response_code = -2;
        } else
            response_code = -1;

        return response_code;
    }

    /**
     * Prints the response based on the code given by generateEntryResponseCode
     *
     * @param responseCode - The response code generated by generateEntryResponseCode
     */
    @Override
    protected void printEntryResponse(int responseCode) {
        if (responseCode != 0) {
            switch (responseCode) {
                case -1:
                    System.out.println("Invalid Input!");
                    break;
                case -2:
                    System.out.println("Invalid Entry: Minimum Value is " + minValue);
                    break;
                case -3:
                    System.out.println("Invalid Entry: Maximum Value is " + maxValue);
                    break;
                default:
                    System.out.println("Unknown Error!");
            }
        }
    }
}
